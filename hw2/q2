import numpy as np
import matplotlib.pyplot as plt

def main():
    # Define sets
    S1 = np.array([[x, x, x] for x in np.linspace(-1, 1, 100)])
    S2 = np.array([[x, y, 1 - x - y] for x, y in zip(np.linspace(-1, 1, 100), np.linspace(-1, 1, 100))])
    S3 = np.array([point for point in S1 if any((point == p).all() for p in S2)])
    S4 = np.concatenate((S1, S2))

    # Check if sets are convex
    convexity = {
        "S1": is_convex(S1),
        "S2": is_convex(S2),
        "S3": is_convex(S3),
        "S4": is_convex(S4)
    }

    # Plot sets
    plot_set(S1, 'blue', 'S1')
    plot_set(S2, 'red', 'S2')
    if len(S3) > 0:  # Check if S3 is not empty
        plot_set(S3, 'green', 'S3')
    plot_set(S4, 'purple', 'S4')


    # Show plot
    plt.xlabel('x1')
    plt.ylabel('x2')
    plt.title('Convex Sets')
    plt.legend()
    plt.show()

    # Print convexity of sets
    for set_name, is_convex_flag in convexity.items():
        print(f"{set_name} is convex: {is_convex_flag}")

###################################

def is_convex(S):
    """Check if a set is convex"""
    for i in range(len(S)):
        for j in range(i + 1, len(S)):
            if any((x + y) / 2 not in S for x, y in zip(S[i], S[j])):
                return False
    return True

###################################

def plot_set(S, color, label):
    """Plot a set"""
    for x, y, z in S:
        plt.plot([x], [y], [z], marker='o', color=color)
    plt.plot(S[0][0], S[0][1], S[0][2], marker='o', color=color, label=label)

if __name__ == "__main__":
    main()

